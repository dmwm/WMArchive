"""
This code shows how to find the log file tar ball for a given output file.
July 22, 2016
Y. Guo 
"""

from pymongo import MongoClient
from bson.objectid import ObjectId
import re
muri = "mongodb://localhost:8230"
mclient = MongoClient(host=muri)
mdb = "fwjr"
mcol = "db"
mgr = mclient[mdb][mcol]

#1 Find the files that LFNArray has given lfn 
output = '/store/unmerged/logs/prod/2016/3/22/pdmvserv_task_SMP-RunIIFall15DR76-00083__v1_T_160313_135718_7429/SMP-RunIIFall15DR76-00083_0/0000/0/cc9cf25c-ef8e-11e5-8cb8-001e67abf518-0-0-logArchive.tar.gz'
c = mgr.find({'meta_data.jobtype':'logCollect' , 'LFNArray': output}, {'_id' : 1, 'LFNArray' : 1})

#2 Get the indexes of lfn in LFNArrays and _ids of the docs
docs = {}
for item in c:
    for index, lfn in  enumerate(item['LFNArray']):
        #print ("lfn", lfn)
        if lfn == output:
            docs[index] =  item['_id']

#3 Make sure the lfn is an output lfn/output.outputLFNs 
gdDocs = []
gd = ''
for k, v in docs.iteritems():
    gd = ''
    gd = mgr.find_one({ '_id' : v, 'steps': {'$elemMatch':{'name':re.compile('cmsRun.*'), 'output.outputLFNs': k}}}, {'_id' : 1})
    if not gd:
        gdDocs.append(gd)   

#4 Find the id of *.tar.gz file generated in the logArch* step in the same doc
tarfiles = []
for i in gdDocs:
    d = mgr.find_one({ '_id' : i}, {'steps.name':True, 'steps.output.outputLFNs':True, 'LFNArray':True, '_id':False})
    for j in d['steps']:
        if 'logArch' in j['name']:
          tarfiles.extend(j['output'][0]['outputLFNs'])      


#5 Make sure the file in LFNArray is a *.tar.gz
tgs = []
for tg in tarfiles:
  if '.tar.gz' in gdDocs['LFNArray'][tg]:
      tgs.append(gdDocs['LFNArray'][tg])

#6 Find the fwjr doc that is generated by a LogCollect job and contains tgs.
results = []
for t in tgs:
    lc = mgr.find({'meta_data.jobtype':'LogCollect',  'LFNArray':t }, {'_id' : True, 'LFNArray' : True, 'steps.name' : True, 'steps.input.lfn' : True, 'steps.output.outputLFNs':True}) 
    rt={}
    for d in lc:
        for index, f in  enumerate(d['LFNArray']) :
            if f == unicode(t):
                for s in d['steps']:
                    if unicode('logCollect') in s['name']:
                        for l in s['input']:
                            if l['lfn'] == index:
                                for r in d['LFNArray']:
                                    if unicode('srm://') in r:
                                        rt['userInput'] = output
                                        rt['logFile']= t 
                                        rt['tarBall'] = r    
                                        results.append(rt)

print('The final result is : ')
print(results)
